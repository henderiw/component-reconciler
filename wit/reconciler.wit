package example:reconciler@0.1.0;

interface retrieve {
   get: func(name: string) -> string;
}

/// Represents the reconciler world
world reconciler {
    import wasi:cli/stdout@0.2.0;
    import wasi:random/random@0.2.0;
    import wasi:cli/environment@0.2.0;
    import wasi:cli/stderr@0.2.0;
    import wasi:cli/stdin@0.2.0;
    import wasi:clocks/monotonic-clock@0.2.0;
    import wasi:clocks/wall-clock@0.2.0;
    import wasi:filesystem/types@0.2.0;
    import wasi:filesystem/preopens@0.2.0;
    import wasi:io/streams@0.2.0;
    import wasi:io/poll@0.2.0;

    import retrieve;

    record reconcile-result {
        requeue: bool,
        requeue-after: u32,
        object: string,
    }

    record reconcile-error {
        code: u32,
        message: string,
    }

    /// The `reconcile` function is the main entry point for the reconciler.
    /// It takes a JSON input and returns a JSON output or an error.
    export reconcile: func(object: string) -> result<reconcile-result, reconcile-error>;
}